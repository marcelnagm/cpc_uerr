<?php

/**
 * BaseTbLocalProva
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_certame
 * @property integer $id_prova
 * @property integer $id_responsavel
 * @property string $nome
 * @property integer $id_cidade
 * @property string $sigla
 * @property string $telefone
 * @property string $endereco
 * @property string $nsalas
 * @property integer $status
 * @property TbCertame $TbCertame
 * @property TbProva $TbProva
 * @property TbCidade $TbCidade
 * @property TbColaborador $TbColaborador
 * @property Doctrine_Collection $TbLocalProva
 * 
 * @method integer             getIdCertame()      Returns the current record's "id_certame" value
 * @method integer             getIdProva()        Returns the current record's "id_prova" value
 * @method integer             getIdResponsavel()  Returns the current record's "id_responsavel" value
 * @method string              getNome()           Returns the current record's "nome" value
 * @method integer             getIdCidade()       Returns the current record's "id_cidade" value
 * @method string              getSigla()          Returns the current record's "sigla" value
 * @method string              getTelefone()       Returns the current record's "telefone" value
 * @method string              getEndereco()       Returns the current record's "endereco" value
 * @method string              getNsalas()         Returns the current record's "nsalas" value
 * @method integer             getStatus()         Returns the current record's "status" value
 * @method TbCertame           getTbCertame()      Returns the current record's "TbCertame" value
 * @method TbProva             getTbProva()        Returns the current record's "TbProva" value
 * @method TbCidade            getTbCidade()       Returns the current record's "TbCidade" value
 * @method TbColaborador       getTbColaborador()  Returns the current record's "TbColaborador" value
 * @method Doctrine_Collection getTbLocalProva()   Returns the current record's "TbLocalProva" collection
 * @method TbLocalProva        setIdCertame()      Sets the current record's "id_certame" value
 * @method TbLocalProva        setIdProva()        Sets the current record's "id_prova" value
 * @method TbLocalProva        setIdResponsavel()  Sets the current record's "id_responsavel" value
 * @method TbLocalProva        setNome()           Sets the current record's "nome" value
 * @method TbLocalProva        setIdCidade()       Sets the current record's "id_cidade" value
 * @method TbLocalProva        setSigla()          Sets the current record's "sigla" value
 * @method TbLocalProva        setTelefone()       Sets the current record's "telefone" value
 * @method TbLocalProva        setEndereco()       Sets the current record's "endereco" value
 * @method TbLocalProva        setNsalas()         Sets the current record's "nsalas" value
 * @method TbLocalProva        setStatus()         Sets the current record's "status" value
 * @method TbLocalProva        setTbCertame()      Sets the current record's "TbCertame" value
 * @method TbLocalProva        setTbProva()        Sets the current record's "TbProva" value
 * @method TbLocalProva        setTbCidade()       Sets the current record's "TbCidade" value
 * @method TbLocalProva        setTbColaborador()  Sets the current record's "TbColaborador" value
 * @method TbLocalProva        setTbLocalProva()   Sets the current record's "TbLocalProva" collection
 * 
 * @package    uerr
 * @subpackage model
 * @author     Marcel Nagm
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTbLocalProva extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_local_prova');
        $this->hasColumn('id_certame', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('id_prova', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('id_responsavel', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('nome', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('id_cidade', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('sigla', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('telefone', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('endereco', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('nsalas', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TbCertame', array(
             'local' => 'id_certame',
             'foreign' => 'id'));

        $this->hasOne('TbProva', array(
             'local' => 'id_prova',
             'foreign' => 'id'));

        $this->hasOne('TbCidade', array(
             'local' => 'id_cidade',
             'foreign' => 'id'));

        $this->hasOne('TbColaborador', array(
             'local' => 'id_responsavel',
             'foreign' => 'id'));

        $this->hasMany('TbSalaProva as TbLocalProva', array(
             'local' => 'id',
             'foreign' => 'id_local_prova'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}